{"meta":{"title":"学习手札","subtitle":"shifengshou2012","description":"莫愁前路无知己，天下谁人不识君","author":"shifengshou2012","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"Hexo 搭建","slug":"Hexo-搭建","date":"2019-07-19T01:56:14.000Z","updated":"2019-07-23T08:40:51.033Z","comments":true,"path":"2019/07/19/Hexo-搭建/","link":"","permalink":"http://yoursite.com/2019/07/19/Hexo-搭建/","excerpt":"","text":"1、准备工作在github上创建一个仓库，命名规则： github账户名 + .github.io2、全局安装hexonpm install hexo -g3、新建文件夹，初始化hexo init npm install4、配置config.yml必配deploy： type：git repo: https://github.com/yourSite/yourSite.github.io branch: master5、创建页面hexo new pageTitle6、开启本地服务hexo clean 清除缓存 hexo generate 生成静态页面 hexo server 启动本地服务7、部署到git服务器hexo deploy8、遇到的问题1. 发布报错； Error: Spawn failed at ChildProcess.&lt;anonymous&gt; (/Users/shifengshou/aboutGit/hexoProject/node_modules/hexo-util/lib/spawn.js:52:19) at ChildProcess.emit (events.js:198:13) at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12) 1. 搭建服务；","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/tags/工具/"}]},{"title":"about git","slug":"about-git","date":"2019-07-17T06:11:30.000Z","updated":"2019-07-23T09:10:22.309Z","comments":true,"path":"2019/07/17/about-git/","link":"","permalink":"http://yoursite.com/2019/07/17/about-git/","excerpt":"","text":"平时很少用git，整理一些git的命令，备忘 几个仓库本地开发仓库---add---&gt; 本地仓库（Index) ---commit---&gt;本地仓库（Head）---push---&gt;远程仓库git initgit init 初始化一个仓库git addgit add . 向本地仓库(Index区)添加所有改动过的文件； git add -p 向本地仓库(Index区)添加单个改动过的文件；（有后续命令, 循环遍历） git add -i 交互式添加文件到暂存区； git add * 向本地仓库(Index区)添加所有文件 git add -f fileName 强行添加（可以添加.gitignore中的文件） 备注：本地仓库由三部分组成，1、工作目录；2、暂存区（Index）；3、实际提交目录（Head);git rmgit rm -cached ‘文件路径’ 不删除物理文件，仅仅将文件从缓存区删除； git rm -f ‘文件路径’ 不仅讲该文件从缓存中删除，同时删除物理文件；git commitgit commit -m &apos;message&apos;; 提交代码至本地Head区 ^HEAD 上一个版本； ^^HEAD 上上一个版本；git pushgit push origin master 推送至远程仓库，可以将master替换为任何一个分支名 git push -u origin master 第一次推送master分支的所有内容git remotegit remote add origin &lt;server&gt; 将本地改动推送到所添加的服务器上 git remote add origin git@server-name：path/。。。 关联一个远程库git branchgit branch 列出所有本地分支，*号代表当前HEAD指向的分支 git branch -r 列出所有远程分支 git branch -a 列出所有本地分支和远程分支； git branch branchName 创建分支 git branch -d branchName 将分支名为branchName的分支删除；git checkoutgit checkout -b branchName 创建一个叫做branchName的分支，并切换； git checkout master 切换为主分支； git checkout fileName 将Index区中的文件覆盖掉本地的改动； git rm fileName将本地以及Index区中的文件删除； git reset HEAD fileName 将HEAD区中的文件覆盖掉Index区的文件； 备注：git fetch origin &amp;&amp;git reset --hard origin/master 丢弃本地所有的改动和提交，从服务器获取最新的版本历史，并将本地主分支指向它；git pullgit pull 更新代码;git mergegit merge branchName 合并分支； 备注：如果文件冲突，需要重新使用 git add fileName 提交；git diffgit diff source_branch target_branch 比较两个分支之间的差异git statusgit status 查看仓库各个文件状态；git mergegit merge branchName 分支合并 备注，add-commit-push-mergegit taggit tag 1.0.0 1b2e1d63ff 创建一个1.0.0的标签，后面的提交字符代表提交Id的前10位，可通过git log查看提交Id；git loggit log 查看本地仓库的历史记录； git log --author=jack，只查看jack的提交记录 git log --pretty=oneline ，一个压缩后的每一条提交记录只占一行的输出； git log --graph --oneline --decorate --all 通过ASCII的树形机构战士所有的分支，每个分支都标注名字和标签； git log --name-status 查看哪个文件发生了变化； git log --help 查看帮助；gitgit ls-files 查看Index区文件；其他情况1、git commit输入命令后，进入到文本编辑模式； 输入i 进行编辑（添加提交备注）； 点击esc退出编辑； 输入：wq，完全退出；2、gitk 内建的图形化的gitgit config color.ui true 彩色的git输出； git config format.pretty oneline 设置每次提交信息只展示一行；","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/tags/工具/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-07-11T09:29:10.454Z","updated":"2019-07-11T09:29:10.454Z","comments":true,"path":"2019/07/11/hello-world/","link":"","permalink":"http://yoursite.com/2019/07/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}